//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: mainSourceOut
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_MainSourceOut")
#ifdef RESTRICT_MainSourceOut
#define INCLUDE_ALL_MainSourceOut 0
#else
#define INCLUDE_ALL_MainSourceOut 1
#endif
#undef RESTRICT_MainSourceOut

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComKgalliganJustdbextractSharedIosCursorFactory_) && (INCLUDE_ALL_MainSourceOut || defined(INCLUDE_ComKgalliganJustdbextractSharedIosCursorFactory))
#define ComKgalliganJustdbextractSharedIosCursorFactory_

#define RESTRICT_MainDependencyOut 1
#define INCLUDE_AndroidDatabaseSqliteSQLiteDatabase_CursorFactory 1
#include "mainDependencyOut.h"

@class AndroidDatabaseSqliteSQLiteDatabase;
@class AndroidDatabaseSqliteSQLiteQuery;
@protocol AndroidDatabaseCursor;
@protocol AndroidDatabaseSqliteSQLiteCursorDriver;

@interface ComKgalliganJustdbextractSharedIosCursorFactory : NSObject < AndroidDatabaseSqliteSQLiteDatabase_CursorFactory >

#pragma mark Public

- (instancetype __nonnull)init;

- (id<AndroidDatabaseCursor>)newCursorWithAndroidDatabaseSqliteSQLiteDatabase:(AndroidDatabaseSqliteSQLiteDatabase *)db
                                  withAndroidDatabaseSqliteSQLiteCursorDriver:(id<AndroidDatabaseSqliteSQLiteCursorDriver>)masterQuery
                                                                 withNSString:(NSString *)editTable
                                         withAndroidDatabaseSqliteSQLiteQuery:(AndroidDatabaseSqliteSQLiteQuery *)query OBJC_METHOD_FAMILY_NONE;

- (id<AndroidDatabaseCursor>)newCursorRealWithAndroidDatabaseSqliteSQLiteDatabase:(AndroidDatabaseSqliteSQLiteDatabase *)db
                                      withAndroidDatabaseSqliteSQLiteCursorDriver:(id<AndroidDatabaseSqliteSQLiteCursorDriver>)masterQuery
                                                                     withNSString:(NSString *)editTable
                                             withAndroidDatabaseSqliteSQLiteQuery:(AndroidDatabaseSqliteSQLiteQuery *)query OBJC_METHOD_FAMILY_NONE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComKgalliganJustdbextractSharedIosCursorFactory)

FOUNDATION_EXPORT void ComKgalliganJustdbextractSharedIosCursorFactory_init(ComKgalliganJustdbextractSharedIosCursorFactory *self);

J2OBJC_TYPE_LITERAL_HEADER(ComKgalliganJustdbextractSharedIosCursorFactory)

#endif

#if !defined (ComKgalliganJustdbextractSharedIosDatabaseErrorHandler_) && (INCLUDE_ALL_MainSourceOut || defined(INCLUDE_ComKgalliganJustdbextractSharedIosDatabaseErrorHandler))
#define ComKgalliganJustdbextractSharedIosDatabaseErrorHandler_

#define RESTRICT_MainDependencyOut 1
#define INCLUDE_AndroidDatabaseDatabaseErrorHandler 1
#include "mainDependencyOut.h"

@class AndroidDatabaseSqliteSQLiteDatabase;

@interface ComKgalliganJustdbextractSharedIosDatabaseErrorHandler : NSObject < AndroidDatabaseDatabaseErrorHandler >

#pragma mark Public

- (instancetype __nonnull)init;

- (void)onCorruptionWithAndroidDatabaseSqliteSQLiteDatabase:(AndroidDatabaseSqliteSQLiteDatabase *)dbObj;

- (void)onCorruptionRealWithAndroidDatabaseSqliteSQLiteDatabase:(AndroidDatabaseSqliteSQLiteDatabase *)dbObj;

@end

J2OBJC_EMPTY_STATIC_INIT(ComKgalliganJustdbextractSharedIosDatabaseErrorHandler)

FOUNDATION_EXPORT void ComKgalliganJustdbextractSharedIosDatabaseErrorHandler_init(ComKgalliganJustdbextractSharedIosDatabaseErrorHandler *self);

J2OBJC_TYPE_LITERAL_HEADER(ComKgalliganJustdbextractSharedIosDatabaseErrorHandler)

#endif

#if !defined (ComKgalliganJustdbextractSharedIosSQLiteTransactionListener_) && (INCLUDE_ALL_MainSourceOut || defined(INCLUDE_ComKgalliganJustdbextractSharedIosSQLiteTransactionListener))
#define ComKgalliganJustdbextractSharedIosSQLiteTransactionListener_

#define RESTRICT_MainDependencyOut 1
#define INCLUDE_AndroidDatabaseSqliteSQLiteTransactionListener 1
#include "mainDependencyOut.h"

@interface ComKgalliganJustdbextractSharedIosSQLiteTransactionListener : NSObject < AndroidDatabaseSqliteSQLiteTransactionListener >

#pragma mark Public

- (instancetype __nonnull)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ComKgalliganJustdbextractSharedIosSQLiteTransactionListener)

FOUNDATION_EXPORT void ComKgalliganJustdbextractSharedIosSQLiteTransactionListener_init(ComKgalliganJustdbextractSharedIosSQLiteTransactionListener *self);

J2OBJC_TYPE_LITERAL_HEADER(ComKgalliganJustdbextractSharedIosSQLiteTransactionListener)

#endif

#if !defined (ComKgalliganJustdbextractSharedTypeHelper_) && (INCLUDE_ALL_MainSourceOut || defined(INCLUDE_ComKgalliganJustdbextractSharedTypeHelper))
#define ComKgalliganJustdbextractSharedTypeHelper_

@class IOSByteArray;
@class IOSObjectArray;
@protocol JavaUtilList;

@interface ComKgalliganJustdbextractSharedTypeHelper : NSObject

#pragma mark Public

- (instancetype __nonnull)init;

+ (IOSObjectArray *)createObjectArrayWithInt:(jint)length;

+ (NSString *)justTestingFromUtf8WithByteArray:(IOSByteArray *)b;

+ (IOSByteArray *)justTestingToUtf8WithNSString:(NSString *)s;

+ (IOSObjectArray *)listToArrayWithJavaUtilList:(id<JavaUtilList>)asdf;

+ (void)replaceObjectAtIndexWithNSObjectArray:(IOSObjectArray *)arr
                                       withId:(id)o
                                      withInt:(jint)index;

+ (void)replaceStringAtIndexWithNSStringArray:(IOSObjectArray *)arr
                                 withNSString:(NSString *)s
                                      withInt:(jint)index;

+ (IOSObjectArray *)stringArrayWithInt:(jint)size;

+ (NSString *)stringAtIndexWithNSStringArray:(IOSObjectArray *)arr
                                     withInt:(jint)index;

@end

J2OBJC_EMPTY_STATIC_INIT(ComKgalliganJustdbextractSharedTypeHelper)

FOUNDATION_EXPORT void ComKgalliganJustdbextractSharedTypeHelper_init(ComKgalliganJustdbextractSharedTypeHelper *self);

FOUNDATION_EXPORT ComKgalliganJustdbextractSharedTypeHelper *new_ComKgalliganJustdbextractSharedTypeHelper_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComKgalliganJustdbextractSharedTypeHelper *create_ComKgalliganJustdbextractSharedTypeHelper_init(void);

FOUNDATION_EXPORT IOSObjectArray *ComKgalliganJustdbextractSharedTypeHelper_stringArrayWithInt_(jint size);

FOUNDATION_EXPORT void ComKgalliganJustdbextractSharedTypeHelper_replaceStringAtIndexWithNSStringArray_withNSString_withInt_(IOSObjectArray *arr, NSString *s, jint index);

FOUNDATION_EXPORT void ComKgalliganJustdbextractSharedTypeHelper_replaceObjectAtIndexWithNSObjectArray_withId_withInt_(IOSObjectArray *arr, id o, jint index);

FOUNDATION_EXPORT IOSObjectArray *ComKgalliganJustdbextractSharedTypeHelper_createObjectArrayWithInt_(jint length);

FOUNDATION_EXPORT NSString *ComKgalliganJustdbextractSharedTypeHelper_stringAtIndexWithNSStringArray_withInt_(IOSObjectArray *arr, jint index);

FOUNDATION_EXPORT IOSObjectArray *ComKgalliganJustdbextractSharedTypeHelper_listToArrayWithJavaUtilList_(id<JavaUtilList> asdf);

FOUNDATION_EXPORT IOSByteArray *ComKgalliganJustdbextractSharedTypeHelper_justTestingToUtf8WithNSString_(NSString *s);

FOUNDATION_EXPORT NSString *ComKgalliganJustdbextractSharedTypeHelper_justTestingFromUtf8WithByteArray_(IOSByteArray *b);

J2OBJC_TYPE_LITERAL_HEADER(ComKgalliganJustdbextractSharedTypeHelper)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_MainSourceOut")
