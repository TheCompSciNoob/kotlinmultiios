//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/libcore/luni/src/main/java/libcore/internal/StringPool.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_LibcoreInternalStringPool")
#ifdef RESTRICT_LibcoreInternalStringPool
#define INCLUDE_ALL_LibcoreInternalStringPool 0
#else
#define INCLUDE_ALL_LibcoreInternalStringPool 1
#endif
#undef RESTRICT_LibcoreInternalStringPool

#if !defined (LibcoreInternalStringPool_) && (INCLUDE_ALL_LibcoreInternalStringPool || defined(INCLUDE_LibcoreInternalStringPool))
#define LibcoreInternalStringPool_

@class IOSCharArray;

/*!
 @brief A pool of string instances.Unlike the <code>interned strings</code>
 , this pool provides no guarantee of reference equality.
 It is intended only to save allocations. This class is not thread safe.
 */
@interface LibcoreInternalStringPool : NSObject

#pragma mark Public

- (instancetype)init;

/*!
 @brief Returns a string equal to <code>new String(array, start, length)</code>.
 */
- (NSString *)getWithCharArray:(IOSCharArray *)array
                       withInt:(jint)start
                       withInt:(jint)length;

@end

J2OBJC_EMPTY_STATIC_INIT(LibcoreInternalStringPool)

FOUNDATION_EXPORT void LibcoreInternalStringPool_init(LibcoreInternalStringPool *self);

FOUNDATION_EXPORT LibcoreInternalStringPool *new_LibcoreInternalStringPool_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibcoreInternalStringPool *create_LibcoreInternalStringPool_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibcoreInternalStringPool)

#endif

#pragma pop_macro("INCLUDE_ALL_LibcoreInternalStringPool")
